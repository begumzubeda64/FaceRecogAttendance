#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Aug 07, 2020 09:26:42 PM IST  platform: Windows NT

import sys
from tkinter import messagebox
import main
from model import readAccount
from penc import check_password

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

from PIL import Image, ImageTk

import login_support
import os.path

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    top = Toplevel1 (root)
    login_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    login_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def cancelLogin(self):
        msg = messagebox.askyesno("Attendance Login", "Are you sure, you want to cancel login?")
        if (msg):
            exit()

    def loginUser(self):
        username = self.txtUser.get()
        password = self.txtPass.get()

        racc = readAccount(username)

        if racc != "":
            if check_password(racc, password):
                msg = messagebox.showinfo("Attendance Login", "You have logged in Succesfully!")
                if msg:
                    root.destroy()
                    main.vp_start_gui()
            else:
                messagebox.showwarning("Attendance Login", "Invalid Password!")
        else:
            messagebox.showwarning("Attendance Login", "Invalid Username!")

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font10 = "-family {Yu Gothic UI Semibold} -size 14 -weight "  \
            "bold"
        font11 = "-family {Segoe UI Emoji} -size 13 -weight bold"
        font12 = "-family {Yu Gothic UI Semibold} -size 12 -weight "  \
            "bold"

        top.geometry("814x654+650+150")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1, 1)
        top.title("Attendance Login")
        top.configure(background="#00ffff")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.0, rely=0.0, relheight=1.002, relwidth=1.001)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#00ffff")

        self.icon = tk.Button(self.Frame1)
        self.icon.place(relx=0.393, rely=0.061, height=193, width=166)
        self.icon.configure(activebackground="#ececec")
        self.icon.configure(activeforeground="#000000")
        self.icon.configure(background="#d9d9d9")
        self.icon.configure(disabledforeground="#a3a3a3")
        self.icon.configure(foreground="#000000")
        self.icon.configure(highlightbackground="#d9d9d9")
        self.icon.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,"Images/login_pro.jpg")
        global _img0
        _img0 = ImageTk.PhotoImage(file=photo_location,master=root)
        self.icon.configure(image=_img0)
        self.icon.configure(pady="0")
        self.icon.configure(relief="groove")
        self.icon.configure(text='''Button''')

        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(relx=0.184, rely=0.458, height=55, width=142)
        self.Label1.configure(background="#00ffff")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font10)
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Username''')

        self.txtUser = tk.Entry(self.Frame1)
        self.txtUser.place(relx=0.405, rely=0.458,height=44, relwidth=0.447)
        self.txtUser.configure(background="white")
        self.txtUser.configure(borderwidth="2")
        self.txtUser.configure(disabledforeground="#a3a3a3")
        self.txtUser.configure(font=font12)
        self.txtUser.configure(foreground="#000000")
        self.txtUser.configure(insertbackground="black")

        self.Label1_1 = tk.Label(self.Frame1)
        self.Label1_1.place(relx=0.172, rely=0.611, height=55, width=162)
        self.Label1_1.configure(activebackground="#f9f9f9")
        self.Label1_1.configure(activeforeground="black")
        self.Label1_1.configure(background="#00ffff")
        self.Label1_1.configure(disabledforeground="#a3a3a3")
        self.Label1_1.configure(font=font10)
        self.Label1_1.configure(foreground="#000000")
        self.Label1_1.configure(highlightbackground="#d9d9d9")
        self.Label1_1.configure(highlightcolor="black")
        self.Label1_1.configure(text='''Password''')

        self.txtPass = tk.Entry(self.Frame1)
        self.txtPass.place(relx=0.405, rely=0.611,height=44, relwidth=0.447)
        self.txtPass.configure(background="white")
        self.txtPass.configure(borderwidth="2")
        self.txtPass.configure(disabledforeground="#a3a3a3")
        self.txtPass.configure(font=font12)
        self.txtPass.configure(foreground="#000000")
        self.txtPass.configure(highlightbackground="#d9d9d9")
        self.txtPass.configure(highlightcolor="black")
        self.txtPass.configure(insertbackground="black")
        self.txtPass.configure(selectbackground="blue")
        self.txtPass.configure(selectforeground="white")
        self.txtPass.configure(show="*")

        self.btnLogin = tk.Button(self.Frame1)
        self.btnLogin.place(relx=0.16, rely=0.763, height=53, width=236)
        self.btnLogin.configure(activebackground="#ececec")
        self.btnLogin.configure(activeforeground="#000000")
        self.btnLogin.configure(background="#eac515")
        self.btnLogin.configure(borderwidth="3")
        self.btnLogin.configure(disabledforeground="#a3a3a3")
        self.btnLogin.configure(font=font11)
        self.btnLogin.configure(foreground="#000000")
        self.btnLogin.configure(highlightbackground="#d9d9d9")
        self.btnLogin.configure(highlightcolor="black")
        self.btnLogin.configure(pady="0")
        self.btnLogin.configure(text='''Login''')
        self.btnLogin.configure(command=self.loginUser)

        self.btnCancel = tk.Button(self.Frame1)
        self.btnCancel.place(relx=0.564, rely=0.763, height=53, width=236)
        self.btnCancel.configure(activebackground="#ececec")
        self.btnCancel.configure(activeforeground="#000000")
        self.btnCancel.configure(background="#eac515")
        self.btnCancel.configure(borderwidth="3")
        self.btnCancel.configure(disabledforeground="#a3a3a3")
        self.btnCancel.configure(font="-family {Segoe UI Emoji} -size 13 -weight bold -slant roman -underline 0 -overstrike 0")
        self.btnCancel.configure(foreground="#000000")
        self.btnCancel.configure(highlightbackground="#d9d9d9")
        self.btnCancel.configure(highlightcolor="black")
        self.btnCancel.configure(pady="0")
        self.btnCancel.configure(text='''Cancel''')
        self.btnCancel.configure(command=self.cancelLogin)

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

if __name__ == '__main__':
    vp_start_gui()





