#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Aug 07, 2020 10:35:30 PM IST  platform: Windows NT

import sys
from tkinter import messagebox
import model

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import add_class_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    add_class_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    add_class_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def addClass(self):
        name = self.txtClass.get().upper()
        if name != "":
            iclass = model.insertClass(name)
            if iclass:
                messagebox.showinfo("Attendance - Add Class", "Class added succesfully!", master=root)
                self.txtClass.configure(text="")
            else:
                messagebox.showwarning("Attendance - Add Class", "Failed to add class or class already exists!", master=root)
        else:
            messagebox.showwarning("Attendance - Add Class", "Class Name field is required!", master=root)

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font9 = "-family {Yu Gothic UI Semibold} -size 12 -weight bold"  \
            ""

        top.geometry("600x450+726+164")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1, 1)
        top.title("Attendance - Add Class")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.0, rely=0.0, relheight=1.011, relwidth=1.008)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#00ffff")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(relx=0.083, rely=0.264, height=46, width=152)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#00ffff")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold -slant roman -underline 0 -overstrike 0")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Class Name''')

        self.txtClass = tk.Entry(self.Frame1)
        self.txtClass.place(relx=0.38, rely=0.264,height=44, relwidth=0.502)
        self.txtClass.configure(background="white")
        self.txtClass.configure(borderwidth="2")
        self.txtClass.configure(disabledforeground="#a3a3a3")
        self.txtClass.configure(font=font9)
        self.txtClass.configure(foreground="#000000")
        self.txtClass.configure(highlightbackground="#d9d9d9")
        self.txtClass.configure(highlightcolor="black")
        self.txtClass.configure(insertbackground="black")
        self.txtClass.configure(selectbackground="blue")
        self.txtClass.configure(selectforeground="white")

        self.btnAddClass = tk.Button(self.Frame1)
        self.btnAddClass.place(relx=0.38, rely=0.505, height=53, width=306)
        self.btnAddClass.configure(activebackground="#ececec")
        self.btnAddClass.configure(activeforeground="#000000")
        self.btnAddClass.configure(background="#eac515")
        self.btnAddClass.configure(borderwidth="3")
        self.btnAddClass.configure(disabledforeground="#a3a3a3")
        self.btnAddClass.configure(font="-family {Segoe UI Emoji} -size 12 -weight bold -slant roman -underline 0 -overstrike 0")
        self.btnAddClass.configure(foreground="#000000")
        self.btnAddClass.configure(highlightbackground="#d9d9d9")
        self.btnAddClass.configure(highlightcolor="black")
        self.btnAddClass.configure(pady="0")
        self.btnAddClass.configure(text='''Add''')
        self.btnAddClass.configure(command=self.addClass)

if __name__ == '__main__':
    vp_start_gui()





